# Name: Iesha Bryant
# EMAIL: ibryant@unmc.edu
# Class: BMI 8540, Spring 2025
# Assignment #: final
#
# Honor Pledge: On my honor as a student of the University of Nebraska at
# Omaha, I have neither given nor received unauthorized help on
# this programming assignment.
#
# Partners: NONE
#
# Sources: NONE

# ctagData.sql
# This database contains human Cut&Tag data from different cell types
# and different targets. This data can be used throughout this whole pipeline
# and assist the user in determining which samples to use.
# At the bottom of the .sql file there are some example queries to help
# the user find specific samples.

# Usage:

mysql username < ctagData.sql

# Once the table is created you can access the table and perform queries.
# Access myql.

mysql

USE username;
# OPTIONAL: Check that table was created.

SHOW tables;

# OPTIONAL: Check if all data was entered properly.

SELECT * FROM ctag_data;



# SRA Processing
# Use the steps in SRA processing files to retrieve and process the files.
# You can use either prefetch or wget to retrive files.
# Prefetch is the preferred method. Follow all instructions listed in below

# Prefetch SRA Processing
# Download SRA file selected from the database, I will begin with SRR8383482.
# Make sure to enter your desired SRR# if not using example sample.
prefetch SRR8383482

# Move the files to your current directory for processing (enter your SRR#).
# Remove empty directory.
mv SRR8383482/SRR8383482.sra ./
rmdir SRR8383482/

# Rename the file to be descriptive or as suggested on database.
mv SRR8383482.sra esc_k27me3.sra

# Translate to fastq and split the files for paired end processing.
# Remove SRA file to save space.
fasterq-dump --split-files esc_k27me3.sra
rm esc_k27me3.sra

# Make a directory for script outputs if plan to run scripts in background.
mkdir outputs



# WGET SRA Processing.
# Download SRA file selected from the database, I will begin with SRR8383482 from GSE124557.

wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR838/002/SRR8383482/SRR8383482_1.fastq.gz
wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR838/002/SRR8383482/SRR8383482_2.fastq.gz

# Rename fastq files to be more descriptive or to suggested name on database.

mv SRR8383482_1.fastq.gz esc_k27me3_1.fastq.gz
mv SRR8383482_2.fastq.gz esc_k27me3_2.fastq.gz

# Unzip the fastq files and remove the gzipped files to save space.

gunzip esc_k27me3_1.fastq.gz esc_k27me3_2.fastq.gz

# Make a directory for script outputs if plan to run scripts in background.

mkdir outputs



# trimGalore.sh
# The provided script trims adapters from the provided fastq files using the
# Trim Galore's auto-detection feature. The minimum length of a sequence after
# trimming is defaulted to 20, edit this by adding flag -q <min_interger>,
# this is an optional addition to the script. The script will output an array
# of files that include the trimmed files named "base_val_#.fastq".

# Activate script.

chmod +x trimGalore.sh

# The use of nohup and the "&" are optional and allows your command to be run
# in the background.
#
# USAGE:

./trimGalore.sh >> outputs/trimGalore.out

# Backgroud:

nohup ./trimGalore.sh >> outputs/trimGalore.out &

# OPTIONAL: If you would like to analyze the quality of your sample,
# you can run the following:

# Usage:
# base = base entered for trimGalore.sh

fastqc "base_val_#.fastq" >> outputs/fastqc_base.log

# Background:

nohup fastqc "base_val_#.fastq" >> outputs/fastqc_base.log &



# sequenceExtraction.sh
# This script will isolate the DNA sequence from the trimmed FASTQ file.
# Currently the FASTQ file contains the header line, separators,
# quality sequences, the DNA sequence and "N" place holders
# for unknown nucleotides.
# This script removes all of those and makes a new file
# with only the DNA sequence.

# Activate script.

chmod +x sequenceExtraction.sh

# USAGE:

./sequenceExtraction.sh >> outputs/sequenceExtraction.out



# analysis.py
# This python script will read any line of your choice from the DNA sequence.
# The program will print the DNA sequence, DNA sequence length, GC content,
# RNA sequence, and a 1 or 3 letter amino acid (AA) protein sequence.

# Usage:

python analysis.py dna_sequence_filename.txt 1|3 line_number

# OPTIONAL: print dna_sequence data into a file.
# You can either have them all build onto one file or make individual files
# for each sequence you analyze.

# Single: use >

python analysis.py dna_sequence_filename.txt 1|3 line_number > output.txt

# Build: use >>

python analysis.py dna_sequence_filename.txt 1|3 line_number >> output.txt
